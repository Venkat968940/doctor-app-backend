openapi: 3.0.0
info:
  title: HMS
  version: 1.0.0
servers:
  - url: http://localhost:8080
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      
security:
  - bearerAuth: []
paths:
  /hms/createAppointment: 
    post:
      tags:
        - Appoinments
      summary: Create Appointment
      description: Create Appointment
      produces:
        - application/json
      parameters:
            - name: body
              in: body
              type: object
              properties:
                doctorId:
                  type: schema.ObjectId
                  example: "66d00559ce394e410cf2871b"
                startTime:
                  type: Date
                  example: "2024-08-31T01:30:33.098+05:30"
                endTime:
                  type: Date
                  example: "2024-08-31T02:30:33.098+05:30"
          
      responses:
        '200':
          description: Appointment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Appointment created successfully"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "613b6f7e9a0f2b2a2c5f9c1d"
                      patientId:
                        type: string
                        example: "612b7e4f9b0f2b1a2c5e7d9a"
                      doctorId:
                        type: string
                        example: "613b5a7d8a0f2b2a2c5f8b2e"
                      startTime:
                        type: string
                        format: date-time
                        example: "2024-09-01T10:00:00Z"
                      endTime:
                        type: string
                        format: date-time
                        example: "2024-09-01T11:00:00Z"
                      createdAt:
                        type: string
                        format: date-time
                        example: "2024-08-30T08:30:00Z"
                      updatedAt:
                        type: string
                        format: date-time
                        example: "2024-08-30T08:30:00Z"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Doctor not found."
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Time slot already booked."
          
  /hms/getAppointments:
    get:
      tags:
        - Appoinments
      summary: get Appointments
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
        - name: page
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - User does not exist
        '404':
          description: Not Found - Appointments Not Found
        '500':
          description: Internal Server Error

  /hms/getAppointmentbyId:
    get:
      tags:
        - Appoinments
      summary: get Appointment By Id
      parameters:
        - name: userId
          in: query
          schema:
            type: string
          example: 66cff9b004fb2e567d143625
        - name: page
          in: query
          schema:
            type: integer
          example: '2'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - User does not exist
        '500':
          description: Internal Server Error
       
